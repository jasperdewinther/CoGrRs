#version 460
#extension GL_GOOGLE_include_directive : require

layout(rgba8, binding=0) uniform image2D to_draw_texture;

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(push_constant) uniform constants
{
    float time;
} gpu_data;

void main() {
    uvec3 global_invocation_id = gl_GlobalInvocationID;
    uint x = global_invocation_id.x;
    uint y = global_invocation_id.y;
    ivec2 pos = ivec2(x,y);

    float val = sin(float(x*5)/1280 + gpu_data.time)/2+0.5; // calulate sin value at certain x
    bool color = val * 720 < y + 1 && val * 720 > y - 1; // the pixel has to be colored if it is at most 1 pixel away from the sin value
    
    imageStore(to_draw_texture, pos, vec4(color));
    return;
}

